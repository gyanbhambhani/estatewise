version: '3.8'

services:
  # Frontend Next.js application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-http://localhost:3000}
      - NEXT_PUBLIC_MCP_SERVERS=${NEXT_PUBLIC_MCP_SERVERS:-http://backend:3001,http://backend:3002,http://backend:3003}
    depends_on:
      - backend
    networks:
      - estatewise-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Backend MCP servers
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3001:3001"  # LeadGen MCP
      - "3002:3002"  # Paperwork MCP
      - "3003:3003"  # ClientSide MCP
    environment:
      - LEADGEN_MCP_PORT=3001
      - PAPERWORK_MCP_PORT=3002
      - CLIENTSIDE_MCP_PORT=3003
      - CLAUDE_API_KEY=${CLAUDE_API_KEY}
      - CLAUDE_MODEL=${CLAUDE_MODEL:-claude-3-5-sonnet-20241022}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    env_file:
      - .env
    networks:
      - estatewise-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    volumes:
      - estatewise-logs:/app/logs
      - estatewise-data:/app/data

  # Optional: Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - estatewise-network
    restart: unless-stopped
    profiles:
      - production

networks:
  estatewise-network:
    driver: bridge

volumes:
  estatewise-logs:
    driver: local
  estatewise-data:
    driver: local 